{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "demo/my-element-2.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MyElement2",
          "cssProperties": [
            {
              "description": "Controls the color of foo",
              "name": "--text-color"
            },
            {
              "description": "Controls the color of bar",
              "name": "--background-color",
              "default": "red"
            }
          ],
          "cssParts": [
            {
              "description": "Styles the color of bar",
              "name": "bar"
            }
          ],
          "slots": [
            {
              "description": "This is a default/unnamed slot",
              "name": ""
            },
            {
              "description": "You can put some elements here",
              "name": "container"
            }
          ],
          "members": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "some description",
              "name": "prop1",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "some description",
              "name": "prop2",
              "kind": "field"
            }
          ],
          "events": [
            {
              "description": "some description for custom-event",
              "name": "custom-event"
            },
            {
              "type": {
                "text": "Event"
              },
              "description": "some description for typed-event",
              "name": "typed-event"
            },
            {
              "type": {
                "text": "CustomEvent"
              },
              "description": "some description for typed-custom-event",
              "name": "typed-custom-event"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "disables the element",
              "name": "disabled"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "description for foo",
              "name": "foo"
            },
            {
              "type": {
                "text": "1|2|3|4"
              },
              "description": "description for foo",
              "name": "foo-alt"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "my-element-2",
          "summary": "This is my alternate custom element - hence the number 2 at the end",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "my-element-2",
          "declaration": {
            "name": "MyElement2",
            "module": "demo/my-element-2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "demo/my-element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MyElement",
          "cssProperties": [
            {
              "description": "Controls the color of foo",
              "name": "--text-color"
            },
            {
              "description": "Controls the color of bar",
              "name": "--background-color",
              "default": "red"
            }
          ],
          "cssParts": [
            {
              "description": "Styles the color of bar",
              "name": "bar"
            }
          ],
          "slots": [
            {
              "description": "This is a default/unnamed slot",
              "name": ""
            },
            {
              "description": "You can put some elements here",
              "name": "container"
            }
          ],
          "members": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "some description",
              "name": "prop1",
              "kind": "field"
            },
            {
              "type": {
                "text": "number"
              },
              "description": "some description",
              "name": "prop2",
              "kind": "field"
            }
          ],
          "events": [
            {
              "description": "some description for custom-event",
              "name": "custom-event"
            },
            {
              "type": {
                "text": "Event"
              },
              "description": "some description for typed-event",
              "name": "typed-event"
            },
            {
              "type": {
                "text": "CustomEvent"
              },
              "description": "some description for typed-custom-event",
              "name": "typed-custom-event"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "disables the element",
              "name": "disabled"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "description for foo",
              "name": "foo"
            },
            {
              "type": {
                "text": "1 | 2 | 3 | 4"
              },
              "description": "description for foo",
              "name": "foo-alt"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "my-element",
          "summary": "My custom component. Here is its [documentation](https://github.com/microsoft/vscode-custom-data/blob/master/samples/webcomponents/src/components/my-component/docs.md).\\nUse it like this:\\n```html\\n<my-component type='text'></my-component>\\n<my-component\\n  type='color'\\n  color='#00bb00'\\n></my-component>\\n```",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "my-element",
          "declaration": {
            "name": "MyElement",
            "module": "demo/my-element.js"
          }
        }
      ]
    }
  ]
}
